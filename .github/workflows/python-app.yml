# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron:  '1 0 * * *'

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry install && poetry run pytest src/serve/server.py

  fetch_air_data:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        poetry install && poetry run pytest src/data/fetch_data.py
    - name: Update data
      run: |
        poetry install && poetry run python3 src/data/fetch_data.py && poetry run dvc push -r origin

  fetch_weather_data:
    needs: fetch_air_data
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        poetry install && poetry run pytest src/data/fetch_weather_data.py
    - name: Update data
      run: |
        poetry install && poetry run python3 src/data/fetch_weather_data.py && poetry run dvc push -r origin

  process_air_data:
    needs: fetch_weather_data
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Process data
      run: |
        poetry install && poetry run dvc pull -r origin && poetry run python3 src/data/process_data.py && poetry run dvc push -r origin 

  process_weather_data:
    needs: process_air_data
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Process data
      run: |
        poetry install && poetry run dvc pull -r origin && poetry run python3 src/data/process_weather_data.py && poetry run dvc push -r origin 

  
  merge_data:
    needs: process_weather_data
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Merge data
      run: |
        poetry install && poetry run dvc pull -r origin && poetry run python3 src/data/merge.py && poetry run dvc push -r origin
    - name: commit and push changes
        git config --global user.name "nick-812" 
        git config --global user.email "nik.jeromel@student.um.si"
        git add -A
        git commit -m "commit message"
    - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets. GITHUB_TOKEN }}
          branch: main

  validate:
    needs: merge_data
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Validate data
      run: |
        poetry install 
        poetry run great_expectations --v3-api checkpoint run my_checkpoint

  test:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test data
      run: |
        poetry install 
        poetry run python src/data/test_evidently.py

  train_test_split:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Current data
      run: |
        cat data/processed/current_data.csv > data/processed/reference_data.csv
    - name: Split data
      run: |
        poetry install 
        poetry run python src/data/train_test_split.py
    - name: commit and push changes
        git config --global user.name "nick-812" 
        git config --global user.email "nik.jeromel@student.um.si"
        git add -A
        git commit -m "commit message"
    - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets. GITHUB_TOKEN }}
          branch: main
