# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron:  '1 0 * * *'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Update data
      run: |
        poetry install && poetry run python3 src/data/fetch_data.py
    #- uses: stefanzweifel/git-auto-commit-action@v4
    - name: Test with pytest
      run: |
        poetry install && poetry run pytest src/serve/server.py

    - name: Commit files # transfer the new html files back into the repository
      run: |
        git config --local user.name "nick-812"
        git add ./docs
        git commit -m "Updating the repository"
    - name: Push changes # push the output folder to your repo
      uses: ad-m/github-push-action@master
      with:
        github_token: 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
        force: true
